@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model InvoiceRegisterClient.Models.ClientViewModelWithInvoices

@{
ViewData["Title"] = "Client Detailes";
}

@section Styles {
    <link href="~/lib/bootstrap-datetimepicker/css/bootstrap-datetimepicker.min.css" rel="stylesheet" type="text/css" />
}
@section Scripts {
    <script src="~/lib/moment/moment-with-locales.min.js"></script>
    <script src="~/lib/bootstrap-datetimepicker/js/bootstrap-datetimepicker.min.js"></script>
    <script type="text/javascript">
        function setByID(id) {
            $(id).datetimepicker({
                //format: "YYYY-MM-DD HH:mm:ss.SSS",
                useCurrent: false
            });
        };
    
        setByID('#invoiceDatePicker');
        setByID('#invoiceBeforePicker');
        setByID('#invoiceAfterPicker');
    </script>
}

<h2>Client Details</h2>

<hr /> @Html.ValidationSummary(true, "", new { @class = "text-danger" })

<form method="post">
    @Html.AntiForgeryToken()
    
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "mb-3 col-sm-1" })
        <label>@Model.Name</label>
    </div>
    
    <a class="btn btn-primary" href="@Url.Action("edit", "clients", new { id=Model.Id })" role="button">Edit</a>
    <a class="btn btn-outline-primary" href="@Url.Action("index", "home")">Back to Clients List</a>

</form>

<div class="mt-5">
    <h4>Clients Invoices</h4>
</div>

<form method="post">
    @Html.AntiForgeryToken()
    
    @Html.HiddenFor(model => model.Id)
    
    <div class="form-inline">
        <label class = "mb-3 col-sm-1">Number</label>
        @Html.EditorFor(model => model.InvoiceNumber, new { htmlAttributes = new { @class = "form-control mb-3 mr-sm-2", min = 0 } })
        
        <label class = "mb-3 col-sm-1">Id</label>
        @Html.EditorFor(model => model.InvoiceId, new { htmlAttributes = new { @class = "form-control mb-3 mr-sm-1", min = 0 } })
        
        <label class = "mb-3 col-sm-1">Page Size</label>
        @Html.EditorFor(model => model.InvoicePageSize, new { htmlAttributes = new { @class = "form-control mb-3 mr-sm-1", min = 0 } })
    </div>
    
    <div class="form-inline">
        <label class = "mb-3 col-sm-1">Date</label>
        @Html.EditorFor(model => model.InvoiceDate, new { htmlAttributes = new { @class = "form-control mb-3", type = "text", id = "invoiceDatePicker" } })
        
        <label class = "mb-3 col-sm-1">Before</label>
        @Html.EditorFor(model => model.InvoiceBefore, new { htmlAttributes = new { @class = "form-control mb-3", type = "text", id = "invoiceBeforePicker" } })
        
        <label class = "mb-3 col-sm-1">After</label>
        @Html.EditorFor(model => model.InvoiceAfter, new { htmlAttributes = new { @class = "form-control mb-3", type = "text", id = "invoiceAfterPicker" } })
    </div>
    
    <div class="form-inline">
        <label class = "mb-3 col-sm-1">Description</label>
        @Html.EditorFor(model => model.InvoiceDescription, new { htmlAttributes = new { @class = "form-control mb-3" } })
        
        <label class = "mb-3 col-sm-1">Sum</label>
        @Html.EditorFor(model => model.InvoiceSum, new { htmlAttributes = new { @class = "form-control mb-3 mr-sm-1", type = "number", min = 0, step = 0.01 } })
        
        <label class = "mb-3 col-sm-1">Reversed</label>
        @Html.EditorFor(model => model.InvoiceReversed, new { htmlAttributes = new { @class = "form-control mb-3 mr-sm-1" } })
    </div>

    <button type="submit" class="btn btn-primary mb-3" asp-route="ifilter">Filter</button>
    <a class="btn btn-primary mb-3 ml-1" href="@Url.Action("add", "invoices", new { id=Model.Id})" role="button">New</a>
</form>

<hr /> @Html.ValidationSummary(true, "", new { @class = "text-danger" })

<div class="row">
    <div class="col-xs-1 ml-4">
        <label class="mt-2" for="pages">Page @Model.InvoicePage of @Model.InvoicePagesCount</label>
    </div>
    <div class="col">
        <ul class="pagination" id="pages">
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.InvoicePagesCount)
            
            <li class="page-item">
                <a class="page-link" href="@Url.Action("filter", "invoices", new { inc = -1, current = Model.InvoicePage, size = Model.InvoicePageSize, count = Model.InvoicePagesCount, clientId = Model.Id })" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                    <span class="sr-only">Previous</span>
                </a>
            </li>
            <li class="page-item">
                <select class="custom-select" onchange="javascript:location.href = this.value;">
                    <option value="#">Select page</option>
                    @for(var i = 1; i <= Model.InvoicePagesCount; i++)
                    {
                        <option value="@Url.Action("filter", "invoices", new { inc = 0, current = i, size = Model.InvoicePageSize, count = Model.InvoicePagesCount, clientId = Model.Id })">@i</option>
                    }
                </select>
            </li>
            <li class="page-item">
                <a class="page-link" href="@Url.Action("filter", "invoices", new { inc = 1, current = Model.InvoicePage, size = Model.InvoicePageSize, count = Model.InvoicePagesCount, clientId = Model.Id })" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                    <span class="sr-only">Next</span>
                </a>
            </li>
        </ul>
    </div>
</div>

<table class="table">
    <tr>
        <th>
            Number
        </th>
        <th>
            Date
        </th>
        <th>
            Description
        </th>
        <th>
            Sum
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.Invoices) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Number)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Sum)
            </td>
            <td>
                <a href="@Url.Action("edit", "invoices", new { id=item.Id })">Edit</a> |
                <a href="@Url.Action("delete", "invoices", new { id=item.Id })">Delete</a>
            </td>
        </tr>
    }

</table>    
